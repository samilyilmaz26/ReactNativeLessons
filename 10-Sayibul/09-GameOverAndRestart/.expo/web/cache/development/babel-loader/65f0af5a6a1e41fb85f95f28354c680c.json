{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Colors from \"../utils/colors\";\nimport PrimaryButton from \"../components/PrimaryButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction StartGameScreen(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      number = _useState2[0],\n      setNumber = _useState2[1];\n\n  function changeText(number) {\n    setNumber(number);\n  }\n\n  function reset() {\n    setNumber('');\n  }\n\n  function confirm() {\n    var chosenNumber = parseInt(number);\n\n    if (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99) {\n      Alert.alert('Invalid number!', 'Number has to be a number between 1 and 99.', [{\n        text: 'Okay',\n        style: 'destructive',\n        onPress: reset\n      }]);\n      return;\n    }\n\n    props.checkumber(chosenNumber);\n  }\n\n  return _jsxs(View, {\n    style: styles.InputContainer,\n    children: [_jsx(TextInput, {\n      style: styles.NumberInput,\n      maxLength: 2,\n      keyboardType: \"number-pad\",\n      autoCapitalize: \"none\",\n      autoCorrect: false,\n      onChangeText: changeText,\n      value: number\n    }), _jsxs(View, {\n      style: styles.buttonsContainer,\n      children: [_jsx(View, {\n        style: styles.buttonContainer,\n        children: _jsx(PrimaryButton, {\n          press: reset,\n          children: \"Reset\"\n        })\n      }), _jsx(View, {\n        style: styles.buttonContainer,\n        children: _jsx(PrimaryButton, {\n          press: confirm,\n          children: \"Confirm\"\n        })\n      })]\n    })]\n  });\n}\n\nexport default StartGameScreen;\nvar styles = StyleSheet.create({\n  InputContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 100,\n    marginHorizontal: 16,\n    padding: 16,\n    backgroundColor: Colors.purple500,\n    borderRadius: 8,\n    elevation: 7\n  },\n  NumberInput: {\n    height: 50,\n    width: 50,\n    fontSize: 32,\n    borderBottomColor: Colors.yellow500,\n    borderBottomWidth: 2,\n    color: Colors.yellow500,\n    marginVertical: 8,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  buttonsContainer: {\n    flexDirection: 'row'\n  },\n  buttonContainer: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["useState","Colors","PrimaryButton","StartGameScreen","props","number","setNumber","changeText","reset","confirm","chosenNumber","parseInt","isNaN","Alert","alert","text","style","onPress","checkumber","styles","InputContainer","NumberInput","buttonsContainer","buttonContainer","StyleSheet","create","justifyContent","alignItems","marginTop","marginHorizontal","padding","backgroundColor","purple500","borderRadius","elevation","height","width","fontSize","borderBottomColor","yellow500","borderBottomWidth","color","marginVertical","fontWeight","textAlign","flexDirection","flex"],"sources":["C:/ReactNat/10-Sayibul/09-GameOverAndRestart(Çalışmadı)/screens/StartGameScreen.js"],"sourcesContent":["import { useState } from 'react';\nimport { TextInput, View, StyleSheet,Alert } from 'react-native';\nimport Colors from '../utils/colors';\nimport PrimaryButton from '../components/PrimaryButton';\n //step 1\nfunction StartGameScreen(props) {\n \n  const  [number,setNumber]= useState(\"\")\n  function changeText(number) {\n    setNumber(number)\n    \n  }\n  function reset() {\n    setNumber('')\n    \n  }\n \n  function confirm() {\n    const chosenNumber = parseInt(number);\n\n    if (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99) {\n      Alert.alert(\n        'Invalid number!',\n        'Number has to be a number between 1 and 99.',\n        [{ text: 'Okay', style: 'destructive', onPress: reset }]\n      );\n      return;\n    }\n //step 1\n   props.checkumber(chosenNumber)\n  }\n  return (\n    <View style={styles.InputContainer}>\n      <TextInput style={styles.NumberInput} \n      maxLength={2} \n      keyboardType='number-pad'\n      autoCapitalize='none'\n      autoCorrect = {false}\n      onChangeText={changeText}\n      value = {number}\n       />\n\n      \n      <View style={styles.buttonsContainer}>\n     \n        <View style={styles.buttonContainer}>\n          <PrimaryButton press={reset} >Reset</PrimaryButton>\n        </View  >\n \n        <View style={styles.buttonContainer}>\n          <PrimaryButton press={confirm} >Confirm</PrimaryButton>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nexport default StartGameScreen;\nconst styles = StyleSheet.create({\n  InputContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    // yukardaki ikili beraber kullanılmalı\n    marginTop: 100,\n    marginHorizontal: 16,\n    padding: 16,\n    backgroundColor: Colors.purple500,\n    borderRadius: 8,\n    elevation: 7,\n  },\n  NumberInput: {\n    height: 50,\n    width: 50,\n    fontSize: 32,\n    borderBottomColor: Colors.yellow500,\n    borderBottomWidth: 2,\n    color: Colors.yellow500,\n    marginVertical: 8,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  \n  buttonsContainer: {\n    flexDirection: 'row'\n  },\n \n  buttonContainer: {\n    flex: 1\n  },\n})"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;;AAEA,OAAOC,MAAP;AACA,OAAOC,aAAP;;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;EAE9B,gBAA2BJ,QAAQ,CAAC,EAAD,CAAnC;EAAA;EAAA,IAAQK,MAAR;EAAA,IAAeC,SAAf;;EACA,SAASC,UAAT,CAAoBF,MAApB,EAA4B;IAC1BC,SAAS,CAACD,MAAD,CAAT;EAED;;EACD,SAASG,KAAT,GAAiB;IACfF,SAAS,CAAC,EAAD,CAAT;EAED;;EAED,SAASG,OAAT,GAAmB;IACjB,IAAMC,YAAY,GAAGC,QAAQ,CAACN,MAAD,CAA7B;;IAEA,IAAIO,KAAK,CAACF,YAAD,CAAL,IAAuBA,YAAY,IAAI,CAAvC,IAA4CA,YAAY,GAAG,EAA/D,EAAmE;MACjEG,KAAK,CAACC,KAAN,CACE,iBADF,EAEE,6CAFF,EAGE,CAAC;QAAEC,IAAI,EAAE,MAAR;QAAgBC,KAAK,EAAE,aAAvB;QAAsCC,OAAO,EAAET;MAA/C,CAAD,CAHF;MAKA;IACD;;IAEFJ,KAAK,CAACc,UAAN,CAAiBR,YAAjB;EACA;;EACD,OACE,MAAC,IAAD;IAAM,KAAK,EAAES,MAAM,CAACC,cAApB;IAAA,WACE,KAAC,SAAD;MAAW,KAAK,EAAED,MAAM,CAACE,WAAzB;MACA,SAAS,EAAE,CADX;MAEA,YAAY,EAAC,YAFb;MAGA,cAAc,EAAC,MAHf;MAIA,WAAW,EAAI,KAJf;MAKA,YAAY,EAAEd,UALd;MAMA,KAAK,EAAIF;IANT,EADF,EAWE,MAAC,IAAD;MAAM,KAAK,EAAEc,MAAM,CAACG,gBAApB;MAAA,WAEE,KAAC,IAAD;QAAM,KAAK,EAAEH,MAAM,CAACI,eAApB;QAAA,UACE,KAAC,aAAD;UAAe,KAAK,EAAEf,KAAtB;UAAA;QAAA;MADF,EAFF,EAME,KAAC,IAAD;QAAM,KAAK,EAAEW,MAAM,CAACI,eAApB;QAAA,UACE,KAAC,aAAD;UAAe,KAAK,EAAEd,OAAtB;UAAA;QAAA;MADF,EANF;IAAA,EAXF;EAAA,EADF;AAwBD;;AAED,eAAeN,eAAf;AACA,IAAMgB,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;EAC/BL,cAAc,EAAE;IACdM,cAAc,EAAE,QADF;IAEdC,UAAU,EAAE,QAFE;IAIdC,SAAS,EAAE,GAJG;IAKdC,gBAAgB,EAAE,EALJ;IAMdC,OAAO,EAAE,EANK;IAOdC,eAAe,EAAE9B,MAAM,CAAC+B,SAPV;IAQdC,YAAY,EAAE,CARA;IASdC,SAAS,EAAE;EATG,CADe;EAY/Bb,WAAW,EAAE;IACXc,MAAM,EAAE,EADG;IAEXC,KAAK,EAAE,EAFI;IAGXC,QAAQ,EAAE,EAHC;IAIXC,iBAAiB,EAAErC,MAAM,CAACsC,SAJf;IAKXC,iBAAiB,EAAE,CALR;IAMXC,KAAK,EAAExC,MAAM,CAACsC,SANH;IAOXG,cAAc,EAAE,CAPL;IAQXC,UAAU,EAAE,MARD;IASXC,SAAS,EAAE;EATA,CAZkB;EAwB/BtB,gBAAgB,EAAE;IAChBuB,aAAa,EAAE;EADC,CAxBa;EA4B/BtB,eAAe,EAAE;IACfuB,IAAI,EAAE;EADS;AA5Bc,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}