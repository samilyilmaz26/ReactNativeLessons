{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport React, { useState, useEffect } from \"react\";\nimport Title from \"../components/Title\";\nimport GuessContainer from \"../components/GuessContainer\";\nimport PrimaryButton from \"../components/PrimaryButton\";\nimport { Ionicons, FontAwesome } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar max = 100;\nvar min = 1;\nexport default function GameScreen(_ref) {\n  var confirmedNumber = _ref.confirmedNumber,\n      onGameOver = _ref.onGameOver;\n\n  function generateRandom(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  var initialGuess = generateRandom(min, max);\n\n  var _useState = useState(initialGuess),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentGuess = _useState2[0],\n      setCurrentGuess = _useState2[1];\n\n  function nextGuess(direction) {\n    if (direction === \"lower\") {\n      max = currentGuess;\n      console.log(currentGuess, direction, min, max);\n    } else {\n      min = currentGuess;\n      console.log(currentGuess, direction, min, max);\n    }\n\n    var newNumber = generateRandom(min, max);\n    setCurrentGuess(newNumber);\n  }\n\n  useEffect(function () {\n    if (currentGuess === confirmedNumber) {\n      onGameOver();\n      min = 1, max = 100;\n    }\n  }, [currentGuess, confirmedNumber, onGameOver]);\n  return _jsx(View, {\n    style: styles.screen,\n    children: _jsxs(View, {\n      children: [_jsx(Title, {\n        children: \"Guess\"\n      }), _jsx(GuessContainer, {\n        children: currentGuess\n      }), _jsxs(View, {\n        children: [_jsx(PrimaryButton, {\n          press: nextGuess.bind(this, 'lower'),\n          children: _jsx(FontAwesome, {\n            name: \"minus-circle\",\n            size: 24,\n            color: \"blue\"\n          })\n        }), _jsx(PrimaryButton, {\n          press: nextGuess.bind(this, 'greater'),\n          children: _jsx(FontAwesome, {\n            name: \"plus-circle\",\n            size: 24,\n            color: \"blue\"\n          })\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 27\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","Title","GuessContainer","PrimaryButton","Ionicons","FontAwesome","max","min","GameScreen","confirmedNumber","onGameOver","generateRandom","Math","floor","random","initialGuess","currentGuess","setCurrentGuess","nextGuess","direction","console","log","newNumber","styles","screen","bind","StyleSheet","create","flex","padding"],"sources":["C:/ReactNat/10-Sayibul/09-GameOverAndRestart(Çalışmadı)/screens/GameScreen.js"],"sourcesContent":["//step 1\r\n\r\nimport { Text, StyleSheet, View, SafeAreaView,Button } from \"react-native\";\r\nimport React, { useState,useEffect } from \"react\";\r\nimport Title from \"../components/Title\";\r\nimport GuessContainer from \"../components/GuessContainer\";\r\nimport PrimaryButton from \"../components/PrimaryButton\";\r\nimport {Ionicons,FontAwesome} from '@expo/vector-icons'\r\n\r\nlet max = 100;\r\nlet min = 1;\r\nexport default function GameScreen({confirmedNumber,onGameOver}) {\r\n \r\n \r\n  function generateRandom(min, max) {\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n  }\r\n\r\n  const initialGuess = generateRandom(min, max);\r\n  const [currentGuess, setCurrentGuess] = useState(initialGuess);\r\n\r\n  function nextGuess(direction) {\r\n   \r\n  \r\n    if (direction === \"lower\") {\r\n      max = currentGuess;\r\n       \r\n      console.log (currentGuess,direction, min, max)\r\n     \r\n    } else {\r\n      min = currentGuess\r\n     \r\n      \r\n    console.log (currentGuess,direction, min, max)\r\n    } \r\n    const newNumber = generateRandom(min, max);\r\n    \r\n    setCurrentGuess(newNumber);\r\n  }\r\n  useEffect(()=> {\r\n    if (currentGuess === confirmedNumber) {\r\n      onGameOver()\r\n      // Stap 1 \r\n      min =1,\r\n      max = 100\r\n    \r\n    }\r\n  },[currentGuess,confirmedNumber,onGameOver])\r\n  return (\r\n    <View style={styles.screen}>\r\n      <View>\r\n        <Title>Guess</Title>\r\n        <GuessContainer>{currentGuess}</GuessContainer>\r\n        <View>\r\n        \r\n          <PrimaryButton  press={nextGuess.bind(this, 'lower')}>\r\n          <FontAwesome name=\"minus-circle\" size={24} color=\"blue\" />\r\n          </PrimaryButton>\r\n          <PrimaryButton  press={nextGuess.bind(this, 'greater')}>\r\n          <FontAwesome name=\"plus-circle\" size={24} color=\"blue\" />\r\n          </PrimaryButton>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    flex: 1,\r\n    padding: 27,\r\n  },\r\n});\r\n"],"mappings":";;;;;;AAGA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,KAAP;AACA,OAAOC,cAAP;AACA,OAAOC,aAAP;AACA,SAAQC,QAAR,EAAiBC,WAAjB,QAAmC,oBAAnC;;;AAEA,IAAIC,GAAG,GAAG,GAAV;AACA,IAAIC,GAAG,GAAG,CAAV;AACA,eAAe,SAASC,UAAT,OAAkD;EAAA,IAA7BC,eAA6B,QAA7BA,eAA6B;EAAA,IAAbC,UAAa,QAAbA,UAAa;;EAG/D,SAASC,cAAT,CAAwBJ,GAAxB,EAA6BD,GAA7B,EAAkC;IAChC,OAAOM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBR,GAAG,GAAGC,GAAvB,CAAX,IAA0CA,GAAjD;EACD;;EAED,IAAMQ,YAAY,GAAGJ,cAAc,CAACJ,GAAD,EAAMD,GAAN,CAAnC;;EACA,gBAAwCP,QAAQ,CAACgB,YAAD,CAAhD;EAAA;EAAA,IAAOC,YAAP;EAAA,IAAqBC,eAArB;;EAEA,SAASC,SAAT,CAAmBC,SAAnB,EAA8B;IAG5B,IAAIA,SAAS,KAAK,OAAlB,EAA2B;MACzBb,GAAG,GAAGU,YAAN;MAEAI,OAAO,CAACC,GAAR,CAAaL,YAAb,EAA0BG,SAA1B,EAAqCZ,GAArC,EAA0CD,GAA1C;IAED,CALD,MAKO;MACLC,GAAG,GAAGS,YAAN;MAGFI,OAAO,CAACC,GAAR,CAAaL,YAAb,EAA0BG,SAA1B,EAAqCZ,GAArC,EAA0CD,GAA1C;IACC;;IACD,IAAMgB,SAAS,GAAGX,cAAc,CAACJ,GAAD,EAAMD,GAAN,CAAhC;IAEAW,eAAe,CAACK,SAAD,CAAf;EACD;;EACDtB,SAAS,CAAC,YAAK;IACb,IAAIgB,YAAY,KAAKP,eAArB,EAAsC;MACpCC,UAAU;MAEVH,GAAG,GAAE,CAAL,EACAD,GAAG,GAAG,GADN;IAGD;EACF,CARQ,EAQP,CAACU,YAAD,EAAcP,eAAd,EAA8BC,UAA9B,CARO,CAAT;EASA,OACE,KAAC,IAAD;IAAM,KAAK,EAAEa,MAAM,CAACC,MAApB;IAAA,UACE,MAAC,IAAD;MAAA,WACE,KAAC,KAAD;QAAA;MAAA,EADF,EAEE,KAAC,cAAD;QAAA,UAAiBR;MAAjB,EAFF,EAGE,MAAC,IAAD;QAAA,WAEE,KAAC,aAAD;UAAgB,KAAK,EAAEE,SAAS,CAACO,IAAV,CAAe,IAAf,EAAqB,OAArB,CAAvB;UAAA,UACA,KAAC,WAAD;YAAa,IAAI,EAAC,cAAlB;YAAiC,IAAI,EAAE,EAAvC;YAA2C,KAAK,EAAC;UAAjD;QADA,EAFF,EAKE,KAAC,aAAD;UAAgB,KAAK,EAAEP,SAAS,CAACO,IAAV,CAAe,IAAf,EAAqB,SAArB,CAAvB;UAAA,UACA,KAAC,WAAD;YAAa,IAAI,EAAC,aAAlB;YAAgC,IAAI,EAAE,EAAtC;YAA0C,KAAK,EAAC;UAAhD;QADA,EALF;MAAA,EAHF;IAAA;EADF,EADF;AAiBD;AACD,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;EAC/BH,MAAM,EAAE;IACNI,IAAI,EAAE,CADA;IAENC,OAAO,EAAE;EAFH;AADuB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}